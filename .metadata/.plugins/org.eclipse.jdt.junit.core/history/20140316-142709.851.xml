<?xml version="1.0" encoding="UTF-8"?><testrun name="quickcheck" project="quickcheck" tests="6" started="6" failures="0" errors="1" ignored="0">
  <testsuite name="quickcheck.QuickCheckSuite" time="0.102">
    <testcase name="Binomial heap satisfies properties." classname="quickcheck.QuickCheckSuite" time="0.075">
      <error>org.scalatest.exceptions.GeneratorDrivenPropertyCheckFailedException: MatchError was thrown during property evaluation.
  Message: None (of class scala.None$)
  Occurred when passed generated values (
    arg0 = List(Node(-1,0,List()))
  )&#13;
	at org.scalatest.prop.Checkers$.doCheck(Checkers.scala:427)&#13;
	at org.scalatest.prop.Checkers$class.check(Checkers.scala:346)&#13;
	at quickcheck.QuickCheckSuite.check(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.prop.Checkers$class.check(Checkers.scala:357)&#13;
	at quickcheck.QuickCheckSuite.check(QuickCheckSuite.scala:18)&#13;
	at quickcheck.QuickCheckSuite$$anonfun$1.apply$mcV$sp(QuickCheckSuite.scala:31)&#13;
	at quickcheck.QuickCheckSuite$$anonfun$1.apply(QuickCheckSuite.scala:31)&#13;
	at quickcheck.QuickCheckSuite$$anonfun$1.apply(QuickCheckSuite.scala:31)&#13;
	at org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1974)&#13;
	at quickcheck.QuickCheckSuite.withFixture(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)&#13;
	at org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)&#13;
	at quickcheck.QuickCheckSuite.runTest(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)&#13;
	at org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)&#13;
	at org.scalatest.FunSuite$class.runTests(FunSuite.scala:1304)&#13;
	at quickcheck.QuickCheckSuite.runTests(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:2303)&#13;
	at quickcheck.QuickCheckSuite.org$scalatest$FunSuite$$super$run(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.FunSuite$$anonfun$run$1.apply(FunSuite.scala:1310)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:362)&#13;
	at org.scalatest.FunSuite$class.run(FunSuite.scala:1310)&#13;
	at quickcheck.QuickCheckSuite.run(QuickCheckSuite.scala:18)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:94)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
Caused by: scala.MatchError: None (of class scala.None$)&#13;
	at quickcheck.QuickCheckHeap$$anonfun$15.isOrdered$1(QuickCheck.scala:49)&#13;
	at quickcheck.QuickCheckHeap$$anonfun$15.apply(QuickCheck.scala:63)&#13;
	at quickcheck.QuickCheckHeap$$anonfun$15.apply(QuickCheck.scala:44)&#13;
	at scala.Function1$$anonfun$andThen$1.apply(Function1.scala:55)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1$$anonfun$3$$anonfun$4.apply(Prop.scala:592)&#13;
	at org.scalacheck.Prop$.secure(Prop.scala:448)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1$$anonfun$3.apply(Prop.scala:592)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1$$anonfun$3.apply(Prop.scala:591)&#13;
	at scala.collection.immutable.Stream.map(Stream.scala:376)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1.getFirstFailure$1(Prop.scala:591)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1.apply(Prop.scala:612)&#13;
	at org.scalacheck.Prop$$anonfun$forAllShrink$1.apply(Prop.scala:586)&#13;
	at org.scalacheck.Prop$$anon$1.apply(Prop.scala:283)&#13;
	at org.scalacheck.Prop$$anonfun$all$1$$anonfun$apply$6.apply(Prop.scala:398)&#13;
	at org.scalacheck.Prop$$anonfun$all$1$$anonfun$apply$6.apply(Prop.scala:398)&#13;
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)&#13;
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)&#13;
	at scala.collection.immutable.List.foreach(List.scala:318)&#13;
	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)&#13;
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45)&#13;
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)&#13;
	at scala.collection.AbstractTraversable.map(Traversable.scala:105)&#13;
	at org.scalacheck.Prop$$anonfun$all$1.apply(Prop.scala:398)&#13;
	at org.scalacheck.Prop$$anonfun$all$1.apply(Prop.scala:397)&#13;
	at org.scalacheck.Prop$$anon$1.apply(Prop.scala:283)&#13;
	at org.scalacheck.Properties.apply(Properties.scala:41)&#13;
	at org.scalacheck.Test$$anonfun$1.apply(Test.scala:307)&#13;
	at org.scalacheck.Test$$anonfun$1.apply(Test.scala:307)&#13;
	at org.scalacheck.Test$.secure(Test.scala:204)&#13;
	at org.scalacheck.Test$.org$scalacheck$Test$$workerFun$1(Test.scala:307)&#13;
	at org.scalacheck.Test$$anonfun$org$scalacheck$Test$$worker$1$1.apply(Test.scala:293)&#13;
	at org.scalacheck.Test$$anonfun$org$scalacheck$Test$$worker$1$1.apply(Test.scala:293)&#13;
	at org.scalacheck.Test$.check(Test.scala:363)&#13;
	at org.scalacheck.Test$.check(Test.scala:275)&#13;
	at org.scalatest.prop.Checkers$.doCheck(Checkers.scala:372)&#13;
	... 39 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="Bogus " classname="1" time="0.005"/>
    <testcase name="Bogus " classname="2" time="0.006"/>
    <testcase name="Bogus " classname="3" time="0.003"/>
    <testcase name="Bogus " classname="4" time="0.003"/>
    <testcase name="Bogus " classname="5" time="0.009"/>
  </testsuite>
</testrun>
